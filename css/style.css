/* Stylesheet.css for MyTimes project by Sarah Wynn Feb 2018 with a bit of help from dev-tools */

body {
  margin: 0; /* Prevents the columns in main from appearing to scroll above the header */
}

header {
  /* positioning */
  display: flex;
  height: 80px;
  width: 100%;
  border-bottom: 1px solid black;
  position: fixed;
  background-color: white;

  /* styling */
  font-family: Verdana;
  font-size: 14px;
  font-weight: bold;
}

#logo {
  display: flex; /* The instruction say this is a flex item, but declaring #logo as a flex container allows us to center the text vertically. */
  align-items: center; /* Centers text vertically. */
  flex-grow: 1;
  padding-left: 30px;
}

#logo img {
  width: 70px;
  height: 60px;
  margin-right: 12px;
}

#logo span {
  color: MediumAquamarine;
}

#navigation ul {
  list-style-type: none;
}

#navigation li {
  display: inline-block;
  padding: 20px 10px;
}

/* major axis horizontal */
main {
  display: flex; /* Task 3: So that main can respond to changes in browser size. */
  max-width: 1200px;
  margin 0 auto 80px auto;
}

.column {
  display: inline-flex; /* Columns can appear side by side, as will the child items if there is enough room. */
  justify-content: space-between; /* This spaces the articles which appear side by side in the column. */
  flex-wrap: wrap; /* This allows column contents to be wrapped. */
  align-content: flex-start; /* Keeps the articles towards the top of their columns. Most noticable in partially filled columns. */
  padding-top: 70px; /* Prevents column contents from being permanently hidden behind the header. */
  /* border: 2px solid black;*/ /* Temporary border to help show column boundaries. */
}

/* Task 3. Set width of each column. */
.column.large {
  width: 630px;
  margin: 20px 20px 20px 0px;
}

.column.medium {
  width: 300px;
  margin: 20px;
}

.column.small {
  width: 240px;
  margin: 20px;
  /* flex-direction: column; */ /* Step 6, though if the news-bites are <p> rather than <span>, all columns can be left as flex-direction: row; */
  justify-content: flex-start; /* Step 6 */
  /* margin: 0px; */
}

.article {
  padding-top: 5px;
  /* border: 1px dashed black; */ /* Temporary border to help show article boundaries. */
}

/* Styling for Main heading. */
h1 {
  font-size: 40px;
  text-align: left;
  color: white;
}

/* Basic styling for non-main headings with background-image. */
h2 {
  display: flex;
  font-family: Georgia;
  font-weight: bold;
  font-size: 30px;
  color: white;
  text-align: center; /* Step 8. Centers each line horizontally. */
  align-items: center; /* Step 8. Centers text vertically. */
}

/* Basic styling for headings with NO background image; demonstration says 24px; */
h3 {
  font-family: Georgia;
  font-weight: bold;
  font-size: 24px;
}

/* This is the text of the article. Instructions say 'Georgia', demonstration says 'Times' */
p {
  font-family: Times;
  font-size: 17px;
  color: black;
}

/* Styling for individual article, image, and heading divs. */
#article2, #article3 {
  max-width: 270px; /* Specifying the width of the articles stops them from expanding to fill the column and allows them to wrap. */
}

#wine-table {
  background-image: url("https://s3.amazonaws.com/codecademy-content/courses/freelance-1/unit-4/img-story-main.png");
  background-color: beige;
  height: 300px;
  width: 100%;
}

#Earth-Spins {
  background-image: url("https://s3.amazonaws.com/codecademy-content/courses/freelance-1/unit-4/img-story-2.png");
  background-color: beige;
  height: 300px;
}

#cat {
  background-image: url("https://s3.amazonaws.com/codecademy-content/courses/freelance-1/unit-4/img-story-1.png");
  background-color: beige;
  height: 300px;
}

#cameraman {
  background-image: url("https://s3.amazonaws.com/codecademy-content/courses/freelance-1/unit-4/img-story-3.png");
  background-color: beige;
  height: 300px;
}

#cookie {
  background-image: url("https://s3.amazonaws.com/codecademy-content/courses/freelance-1/unit-4/img-news-bite.png");
  background-color: beige;
  height: 240px;
  width: 240px; /* Width specified to allow background-image space to exist. */
}

#news-bites { /* Step 6 */
  font-size: 16px;
  font-weight: bold;
}

#bite-list p { /* Task 6 Using <p> rather than <span> makes the spacing of the news bites much easier. */
  /* positioning */
  padding: 11px 20px;
  margin: 0px;

  /* style */
  border-bottom: 1px solid black;
  /* border-top: 1px solid black; */ /* The instructions specify a top border, but the demonstration neglects it. */
  background-color: WhiteSmoke;
  font-family: Verdana;
  font-size: 12px;
  color: DimGray;

}
